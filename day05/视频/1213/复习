1、do while循环：
   do{
     语句块
   }while(条件)
2、for、while、do while之间的使用场景：
   for：一般是在已知的循环次数中使用，先判断后执行
   while：一般是在未知循环次数中使用，先判断后执行
   do while：一般是在未知循环次数中使用，先执行一次然后在判断

3、for循环的特殊写法：
    for(初始值1，初始值1..;条件1,条件1..;步长1,步长1..){
        语句块
    }
4、为什么使用函数？
    1、封装，可以把一些实现特定功能的代码封装在函数，需要的时候直接调用
    2、复用，在页面中当需要使用该功能时，可以重复调用
    3、减少代码，使得页面代码更加简洁，并有利于后期维护
5、什么是函数？
    就是用来封装特定功能代码的盒子
6、创建函数
    声明式：function 函数名(){语句块}
    赋值式：var 变量名=function(){语句块}
7、调用函数：直接通过函数名()就可以调用了
    声明式函数可以在页面的任意位置调用
    赋值式函数只能在函数下面调用
8、函数中的参数：行参和实参
    行参：在创建函数时，函数名后面()书写。行参只能在函数内部使用
    实参：在调用函数时，函数名后面()书写
9、行参和实参长度不一致：
    行参个数大于实参，多余的部分值为undefined
    实参个数大于行参，多余的部分不书写
10、arguments对象
    类似于数组，可以使用数组当中的下标来获取所传递的参数，可以是length属性来获取当前arguments对象中元素的长度

11、return关键字：
    1、终断函数：在return关键字后面的代码都将不执行
    2、返回值：把函数中的操作结果返回到函数调用位置
12、预解析
    使用var关键字定义的变量或声明式函数，会在执行之前先预解析

